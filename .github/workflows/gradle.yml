# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-java@v3
      with:
        distribution: temurin
        java-version: 19

    - name: Setup Gradle
      uses: gradle/gradle-build-action@v2

    - name: Make gradlew executable
      run: chmod +x ./gradlew

    #TODO add tests

    - name: Execute Gradle build without tests
      run: ./gradlew build -x test

    - name: Create remote directory if not present
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.REMOTE_HOST }}
        username: ${{ secrets.REMOTE_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          mkdir -p ${{ secrets.REMOTE_TARGET }}

#    - name: Copy JAR to SSH server
#      run: scp -i ${{ secrets.SSH_PRIVATE_KEY }} ./build/libs/*.jar ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }}:${{ secrets.REMOTE_TARGET }}
    - name: Log and copy JAR to SSH server
      env:
        REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
        REMOTE_USER: ${{ secrets.REMOTE_USER }}
        REMOTE_TARGET: ${{ secrets.REMOTE_TARGET }}
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      run: |
        echo "Executing command: scp -i $SSH_PRIVATE_KEY ./build/libs/*.jar $REMOTE_USER@$REMOTE_HOST:$REMOTE_TARGET/api.jar"
        scp -i $SSH_PRIVATE_KEY ./build/libs/*.jar $REMOTE_USER@$REMOTE_HOST:$REMOTE_TARGET/api.jar
    - name: Clean up
      run: rm -rf ./build/libs/*.jar
